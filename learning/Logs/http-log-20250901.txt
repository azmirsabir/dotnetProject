2025-09-01 10:33:26.841 +03:00 [INF] Now listening on: http://localhost:5290
2025-09-01 10:33:26.866 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-01 10:33:26.866 +03:00 [INF] Hosting environment: Development
2025-09-01 10:33:26.866 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/OnlineLearning/learning
2025-09-01 10:33:30.127 +03:00 [INF] Application is shutting down...
2025-09-01 10:54:09.679 +03:00 [INF] Now listening on: http://localhost:5290
2025-09-01 10:54:09.704 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-01 10:54:09.704 +03:00 [INF] Hosting environment: Development
2025-09-01 10:54:09.704 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/OnlineLearning/learning
2025-09-01 10:54:11.732 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/","StatusCode":404,"Duration":49,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"\"Endpoint not found\""}
2025-09-01 10:54:11.855 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/favicon.ico","StatusCode":404,"Duration":1,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":""}
2025-09-01 10:54:14.830 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/","StatusCode":404,"Duration":2,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"\"Endpoint not found\""}
2025-09-01 10:54:15.544 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/","StatusCode":404,"Duration":0,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"\"Endpoint not found\""}
2025-09-01 10:54:15.735 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/","StatusCode":404,"Duration":0,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"\"Endpoint not found\""}
2025-09-01 10:54:15.935 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/","StatusCode":404,"Duration":0,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"\"Endpoint not found\""}
2025-09-01 10:54:19.365 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/swagger/v1/swagger.json","StatusCode":200,"Duration":90,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\n  \"openapi\": \"3.0.4\",\n  \"info\": {\n    \"title\": \"Your API\",\n    \"version\": \"v1\"\n  },\n  \"paths\": {\n    \"/Auth/login\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Auth/register\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Auth/refresh-token\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/User\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/User/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"LoginRequest\": {\n        \"required\": [\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginResponseResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/LoginResponse\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"RefreshTokenRequest\": {\n        \"required\": [\n          \"refreshToken\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"refreshToken\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"StringResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"User\": {\n        \"required\": [\n          \"name\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 3,\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserDto\": {\n        \"required\": [\n          \"name\",\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 3,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"maxLength\": 100,\n            \"minLength\": 6,\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/User\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/User\"\n          }\n        },\n        \"additionalProperties\": false\n      }\n    },\n    \"securitySchemes\": {\n      \"Bearer\": {\n        \"type\": \"http\",\n        \"description\": \"Authorization header using the Bearer scheme. Example: 'Bearer {token}'\",\n        \"scheme\": \"bearer\"\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"Bearer\": [ ]\n    }\n  ]\n}"}
2025-09-01 10:54:35.499 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":200,"Duration":405,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"azmir\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Login successful \",\"data\":{\"token\":\"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYXptaXIiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOiJhZG1pbiIsImV4cCI6MTc1NjcxNjg3NSwiaXNzIjoiQm9va1N0b3JlQXBwIiwiYXVkIjoiTXlBd2Vzb21lQXVkaWVuY2UifQ.xZyYCkIrNBbTquBwmZoRjqIhmV1dqYfZPkakUbIQhNgq4Ii_h0C8akQ3v70oDSgG6gWtIN4gPU9nTX_qjuRaWg\",\"refreshToken\":\"khm/RTnIQhkAdh1FJ3YdHCRn/Fq/9Tz8qIGoINhJUjg=\"}}"}
