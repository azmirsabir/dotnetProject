2025-06-02 00:01:46.774 +03:00 [INF] Application is shutting down...
2025-06-02 00:01:50.941 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 00:01:50.965 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 00:01:50.965 +03:00 [INF] Hosting environment: Development
2025-06-02 00:01:50.965 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 00:02:09.415 +03:00 [WRN] Failed to determine the https port for redirect.
2025-06-02 00:02:09.918 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/register","StatusCode":200,"Duration":494,"User":"UserId: , UserName: ","RequestBody":"{\"name\":\"soltan1\",\"username\":\"soltan1\",\"password\":\"***\",\"role\":\"Admin\"}","ResponseBody":"{\"message\":\"Register successful\",\"data\":{\"id\":10,\"name\":\"soltan1\",\"username\":\"soltan1\",\"role\":\"User\",\"createdDate\":\"2025-06-01T21:02:09.562208Z\"}}"}
2025-06-02 00:03:36.946 +03:00 [INF] HTTP Request/Response Info: {"Method":"PUT","Path":"/User/10","StatusCode":401,"Duration":10,"User":"UserId: , UserName: ","RequestBody":"{\"name\":\"Saman\",\"username\":\"saman\",\"password\":\"***\",\"role\":\"Admin\"}","ResponseBody":""}
2025-06-02 00:03:50.864 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":200,"Duration":232,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"azmir\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Login successful \",\"data\":{\"token\":\"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYXptaXIiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOiJBZG1pbiIsImV4cCI6MTc0ODgxNTQzMCwiaXNzIjoiQm9va1N0b3JlQXBwIiwiYXVkIjoiTXlBd2Vzb21lQXVkaWVuY2UifQ.cpNWFBKEvoIayr5v13ExH1bje6FS1uwhJKhIORobjdlTJqtNSvNdPuLdxZtfjhpoBPMsTSQwuFGA6oaFmFUEeQ\",\"refreshToken\":\"swn4K9yyoGrGmUQ8jf3uy1oTKsI9jl//9gDyxKy1nXs=\"}}"}
2025-06-02 00:04:26.593 +03:00 [INF] HTTP Request/Response Info: {"Method":"PUT","Path":"/User/10","StatusCode":200,"Duration":92,"User":"UserId: 1, UserName: azmir","RequestBody":"{\"name\":\"Saman\",\"username\":\"saman\",\"password\":\"***\",\"role\":\"Admin\"}","ResponseBody":"{\"message\":\"User updated successfully\",\"data\":{\"id\":10,\"name\":\"Saman\",\"username\":\"saman\",\"role\":\"Admin\",\"createdDate\":\"2025-06-01T21:02:10\"}}"}
2025-06-02 00:28:20.200 +03:00 [INF] Application is shutting down...
2025-06-02 00:28:24.899 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 00:28:24.929 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 00:28:24.929 +03:00 [INF] Hosting environment: Development
2025-06-02 00:28:24.929 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 00:28:43.723 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - Bookstore.Controllers.AuthController.RefreshToken (Bookstore). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.PrepareGenerateOperation(IGrouping`2 group)
   at System.Linq.Enumerable.IteratorSelectIterator`2.MoveNext()
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperationsAsync(OpenApiDocument document, IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePathsAsync(OpenApiDocument document, IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository, Func`4 operationsGenerator)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePathsAsync(OpenApiDocument document, IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-06-02 00:29:09.664 +03:00 [INF] Application is shutting down...
2025-06-02 00:29:13.705 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 00:29:13.736 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 00:29:13.736 +03:00 [INF] Hosting environment: Development
2025-06-02 00:29:13.736 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 00:29:31.826 +03:00 [WRN] Failed to determine the https port for redirect.
2025-06-02 00:29:32.239 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":200,"Duration":407,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"azmir\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Login successful \",\"data\":{\"token\":\"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYXptaXIiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOiJBZG1pbiIsImV4cCI6MTc0ODgxNjk3MiwiaXNzIjoiQm9va1N0b3JlQXBwIiwiYXVkIjoiTXlBd2Vzb21lQXVkaWVuY2UifQ.BKv4Si4yYNe8gQqkc8Tho1amNziG4pE3JVxhxazhpSebqGSkKwhdJss6VEJX9i7ChN1RV98wDdd2Y7K3t20Hlw\",\"refreshToken\":\"wjavGGgZGNsm42eV7hlbTZygPyVr4M62e+HA1MQEx8Y=\"}}"}
2025-06-02 00:31:10.129 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/refresh-token","StatusCode":200,"Duration":120,"User":"UserId: , UserName: ","RequestBody":"{\"userId\":1,\"refreshToken\":\"wjavGGgZGNsm42eV7hlbTZygPyVr4M62e\\u002BHA1MQEx8Y=\"}","ResponseBody":"{\"message\":\"Token refreshed successfully\",\"data\":{\"token\":\"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYXptaXIiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOiJBZG1pbiIsImV4cCI6MTc0ODgxNzA3MCwiaXNzIjoiQm9va1N0b3JlQXBwIiwiYXVkIjoiTXlBd2Vzb21lQXVkaWVuY2UifQ.T3aGInz8SWpFAFN0u7yCggCTGAkOeZPojjz15FGuIkCflttu7pd1a6RhHij_20O_ej2HzVkrzU_e79wC8Kvgsw\",\"refreshToken\":\"hQ1J9QQg09VV/oitdYKX+pF8oqOXbYrNBHIXLTc+jGU=\"}}"}
2025-06-02 00:31:37.536 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/refresh-token","StatusCode":401,"Duration":44,"User":"UserId: , UserName: ","RequestBody":"{\"userId\":1,\"refreshToken\":\"hQ1J9QQg09VV/oitdYKX\\u002BpF8oqOXbYrNBHIXLTc\\u002BjGU\"}","ResponseBody":"{\"message\":\"Invalid refresh token\"}"}
2025-06-02 00:31:45.678 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/refresh-token","StatusCode":200,"Duration":45,"User":"UserId: , UserName: ","RequestBody":"{\"userId\":1,\"refreshToken\":\"hQ1J9QQg09VV/oitdYKX\\u002BpF8oqOXbYrNBHIXLTc\\u002BjGU=\"}","ResponseBody":"{\"message\":\"Token refreshed successfully\",\"data\":{\"token\":\"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYXptaXIiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOiJBZG1pbiIsImV4cCI6MTc0ODgxNzEwNSwiaXNzIjoiQm9va1N0b3JlQXBwIiwiYXVkIjoiTXlBd2Vzb21lQXVkaWVuY2UifQ.emEAp2guG8gbuyWvzrIg0tCWZkP_fkg8W7Q9tI3TI1x31bNVQjEFynO-_ThrqbJ7rhkWvkqlGa4LuR3bmru0AQ\",\"refreshToken\":\"J3tP9jepQWaW8aD6eWZ8pPlR1AZCJobgJUps/mzXC4U=\"}}"}
2025-06-02 00:40:46.832 +03:00 [INF] Application is shutting down...
2025-06-02 00:40:51.993 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 00:40:52.023 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 00:40:52.024 +03:00 [INF] Hosting environment: Development
2025-06-02 00:40:52.024 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 00:45:35.572 +03:00 [INF] Application is shutting down...
2025-06-02 00:45:40.177 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 00:45:40.220 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 00:45:40.220 +03:00 [INF] Hosting environment: Development
2025-06-02 00:45:40.220 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 00:45:50.883 +03:00 [WRN] Failed to determine the https port for redirect.
2025-06-02 00:45:51.046 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":158,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:45:52.333 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":93,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:45:53.605 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":30,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:45:54.243 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":29,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:45:54.775 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":37,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:45:58.393 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":29,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:45:58.725 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":39,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:45:58.867 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:45:59.014 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:45:59.186 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:45:59.330 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:45:59.465 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:45:59.612 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:45:59.792 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":42,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:45:59.928 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":42,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:00.047 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:00.198 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:00.380 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":45,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:00.493 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:00.664 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":18,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:00.814 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:00.944 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:01.098 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:01.256 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:01.396 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:01.557 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:01.706 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:01.844 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:01.996 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:02.151 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":18,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:02.306 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:02.436 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":19,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:02.575 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:02.730 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:02.877 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:03.029 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:03.175 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:03.311 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:03.459 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:03.615 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":18,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:03.761 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:03.913 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:04.074 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:04.211 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:04.364 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":18,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:04.521 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:04.655 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:04.806 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:04.989 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":38,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:05.123 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:05.262 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:05.443 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":29,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:05.588 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:05.741 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:05.895 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:06.042 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:06.195 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:06.348 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:06.486 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":19,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:06.656 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:06.795 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:06.946 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":18,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:07.108 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:07.263 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:07.412 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:07.565 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":19,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:07.711 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:07.867 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:08.026 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:08.182 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:08.326 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:08.497 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:08.655 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:08.805 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:08.975 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:09.119 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:09.272 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:09.415 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:09.580 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:09.746 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:09.893 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":29,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:10.039 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:10.195 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":33,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:10.354 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:10.502 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":19,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:10.692 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:10.845 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:11.008 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:11.142 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:11.305 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:11.474 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:11.615 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:11.783 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":20,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:11.943 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:12.122 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:12.293 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":30,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:12.436 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:12.586 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:12.745 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:12.948 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":32,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:13.088 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:13.247 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:13.413 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:13.575 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:13.757 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":19,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:13.892 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:14.044 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:14.200 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:14.392 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:14.555 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:14.727 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:14.879 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:15.060 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:15.228 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:15.395 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:15.562 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:15.751 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":29,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:15.909 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:16.069 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:16.249 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":35,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:16.411 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:16.570 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:16.764 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":30,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:16.909 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:17.078 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:17.234 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":21,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:17.422 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:17.620 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":33,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:17.772 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:17.958 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:18.116 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:18.286 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:18.435 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:18.622 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:18.774 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:18.940 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:19.104 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:19.281 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:19.437 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:19.591 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:19.761 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":30,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:19.921 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:20.088 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:20.267 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":18,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:20.431 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":18,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:20.604 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:20.776 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":29,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:20.935 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:21.104 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:21.274 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:21.446 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:21.620 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:21.795 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:21.975 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:22.138 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:22.305 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:22.467 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:22.611 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":14,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:22.789 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:22.973 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:23.140 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:23.326 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:23.501 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":31,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:23.647 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":14,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:23.828 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:23.996 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:24.196 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:24.372 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:24.561 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":29,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:24.691 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":14,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:24.893 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:25.040 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:25.222 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:25.406 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:25.575 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:25.729 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:25.924 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:26.067 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":38,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:26.238 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:26.388 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":21,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:26.593 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:26.752 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:26.894 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":14,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:27.072 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:27.220 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:27.394 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:27.581 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:27.739 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:27.899 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":14,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:28.069 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":14,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:28.245 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:28.404 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:28.575 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:28.743 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:28.905 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:29.051 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":18,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:29.203 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:29.387 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:29.538 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:29.705 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:30.291 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:30.478 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:31.251 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":18,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:31.769 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":35,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:36.124 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":20,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:36.228 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":30,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:36.355 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:36.506 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:36.645 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:36.794 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":14,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:36.937 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:37.099 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":30,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:37.260 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":29,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:37.402 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:37.595 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:37.859 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":131,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:38.044 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:38.234 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":36,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:38.555 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":29,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:38.708 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:38.880 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":14,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:39.140 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:39.290 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:39.478 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:39.659 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:39.841 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:39.978 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:40.142 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":21,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:40.314 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:40.494 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:40.659 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:40.827 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:40.977 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:41.701 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:41.880 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":30,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:42.075 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:42.820 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:42.920 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:42.986 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:43.101 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:43.293 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:43.358 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":12,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:43.512 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":33,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:43.713 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:43.895 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:43.969 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:44.085 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:44.154 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:44.347 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:44.461 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:44.510 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":13,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:44.656 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:44.718 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:44.893 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:45.018 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:45.103 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:45.203 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:45.284 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:45.395 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:45.475 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:45.603 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:45.685 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:45.799 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:45.987 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":21,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:46.075 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:46.266 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:46.751 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:46.822 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:47.134 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:47.544 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:47.611 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":14,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:47.726 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:47.815 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:48.315 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:48.419 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:48.519 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:48.636 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:48.708 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:48.834 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":21,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:48.921 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:49.019 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:49.101 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:49.220 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:49.350 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":21,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:49.412 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":18,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:49.494 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:49.676 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:49.724 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":13,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:49.842 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":14,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:49.950 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:51.775 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:52.071 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:52.150 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:52.252 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:52.492 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:52.554 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:52.670 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:52.768 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:52.869 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:52.954 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:53.059 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:53.156 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":13,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:53.287 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:53.370 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:53.485 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":20,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:53.637 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:53.753 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:53.851 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:53.970 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:54.352 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:54.418 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:54.519 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:54.619 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:54.705 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:54.853 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:54.939 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":29,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:55.051 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:55.154 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:55.293 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":13,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:55.403 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:55.486 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:55.586 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:55.693 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":29,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:55.925 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":21,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:56.077 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:56.188 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:56.275 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:56.360 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":14,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:56.538 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:56.945 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":32,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:57.007 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:57.314 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:57.685 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:57.844 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:57.969 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:58.090 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:58.236 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:58.333 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:58.463 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:58.832 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:58.905 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:59.017 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:59.526 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:59.595 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":13,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:59.712 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:59.835 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":65,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:46:59.940 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:47:00.374 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":33,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:47:00.469 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":31,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:47:00.613 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:47:00.746 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:30.528 +03:00 [INF] Application is shutting down...
2025-06-02 00:48:34.676 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 00:48:34.705 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 00:48:34.705 +03:00 [INF] Hosting environment: Development
2025-06-02 00:48:34.705 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 00:48:35.514 +03:00 [WRN] Failed to determine the https port for redirect.
2025-06-02 00:48:35.694 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":170,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:36.397 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":47,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:37.012 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:37.179 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:37.346 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:37.546 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":34,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:37.678 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:37.844 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:37.993 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:38.143 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:38.960 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":31,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:39.145 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":34,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:39.344 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:39.572 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:39.765 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:39.952 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:40.112 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:40.292 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:40.443 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:40.641 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":18,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:40.783 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:40.955 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:41.113 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:41.280 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":32,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:48:47.943 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:51:44.704 +03:00 [INF] Application is shutting down...
2025-06-02 00:51:48.279 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 00:51:48.304 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 00:51:48.304 +03:00 [INF] Hosting environment: Development
2025-06-02 00:51:48.304 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 00:51:56.609 +03:00 [WRN] Failed to determine the https port for redirect.
2025-06-02 00:51:56.792 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":177,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:52:56.807 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":59124,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:21.370 +03:00 [INF] Application is shutting down...
2025-06-02 00:53:46.858 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 00:53:46.883 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 00:53:46.884 +03:00 [INF] Hosting environment: Development
2025-06-02 00:53:46.884 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 00:53:49.188 +03:00 [WRN] Failed to determine the https port for redirect.
2025-06-02 00:53:49.378 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":183,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:50.057 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":65,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:50.733 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":40,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:51.350 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":31,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:51.790 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:52.148 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":21,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:52.539 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:52.891 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":30,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:53.187 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":18,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:53.569 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:53.830 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:54.259 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":33,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:54.542 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":18,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:54.885 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:55.248 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:55.577 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":14,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:55.915 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:56.231 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":18,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:56.520 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:56.864 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":32,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:57.242 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":29,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:57.584 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:57.897 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:58.224 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:58.641 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":30,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:59.005 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:59.378 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":29,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:53:59.818 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":44,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:00.145 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:00.436 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":17,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:00.791 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:01.121 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":14,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:01.475 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:01.826 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:02.171 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":29,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:02.463 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":30,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:02.811 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":35,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:03.116 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:03.433 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:03.733 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":18,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:04.139 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":31,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:04.445 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":30,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:04.776 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":14,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:05.145 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":30,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:05.482 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:05.779 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":30,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:06.135 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:06.505 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:06.871 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":37,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:07.246 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:07.550 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:07.890 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":35,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:08.176 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":18,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:08.432 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:08.735 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:09.005 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":29,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:09.294 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:09.640 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:09.936 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:10.191 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":14,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:10.585 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:10.936 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":35,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:11.225 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:11.589 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:11.883 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":37,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:12.207 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":29,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:12.557 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":33,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:12.818 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":29,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:13.151 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:13.386 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:13.775 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:14.112 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":30,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:14.417 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:14.767 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:15.084 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:15.404 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:15.705 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:16.068 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:16.416 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:16.732 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":18,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:17.083 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:17.377 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:17.677 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":30,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:17.951 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:18.255 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":30,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:18.591 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:18.837 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:19.236 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:19.497 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:19.804 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:20.124 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:20.465 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":23,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:20.734 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:21.021 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:21.365 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:21.683 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:21.978 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":27,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:22.326 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:22.641 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":33,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:22.949 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":24,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 00:54:32.285 +03:00 [INF] Application is shutting down...
2025-06-02 00:54:49.292 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":26079,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"string\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 01:01:01.752 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 01:01:01.779 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 01:01:01.779 +03:00 [INF] Hosting environment: Development
2025-06-02 01:01:01.779 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 01:01:12.665 +03:00 [WRN] Failed to determine the https port for redirect.
2025-06-02 01:01:12.679 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Auth/login1","StatusCode":404,"Duration":10,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"\"Endpoint not found\""}
2025-06-02 01:02:17.743 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Auth/login","StatusCode":404,"Duration":1,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"\"Endpoint not found\""}
2025-06-02 01:02:20.453 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Auth/login","StatusCode":404,"Duration":0,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"\"Endpoint not found\""}
2025-06-02 01:02:46.246 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/1","StatusCode":200,"Duration":308,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"message\":\"The book fetched\",\"data\":{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"}}"}
2025-06-02 01:02:57.196 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/1","StatusCode":200,"Duration":106,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"message\":\"The book fetched\",\"data\":{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"}}"}
2025-06-02 01:23:32.278 +03:00 [INF] Application is shutting down...
2025-06-02 01:23:37.022 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 01:23:37.048 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 01:23:37.049 +03:00 [INF] Hosting environment: Development
2025-06-02 01:23:37.049 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 01:25:04.141 +03:00 [INF] Application is shutting down...
2025-06-02 01:25:08.328 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 01:25:08.353 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 01:25:08.354 +03:00 [INF] Hosting environment: Development
2025-06-02 01:25:08.354 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 01:25:12.351 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/1","StatusCode":200,"Duration":290,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"message\":\"The book fetched\",\"data\":{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"}}"}
2025-06-02 01:25:15.347 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/1","StatusCode":200,"Duration":100,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"message\":\"The book fetched\",\"data\":{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"}}"}
2025-06-02 01:25:16.346 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/1","StatusCode":200,"Duration":44,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"message\":\"The book fetched\",\"data\":{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"}}"}
2025-06-02 01:25:16.983 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/1","StatusCode":200,"Duration":33,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"message\":\"The book fetched\",\"data\":{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"}}"}
2025-06-02 01:25:17.437 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/1","StatusCode":200,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"message\":\"The book fetched\",\"data\":{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"}}"}
2025-06-02 01:25:29.693 +03:00 [INF] Application is shutting down...
2025-06-02 01:25:33.415 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 01:25:33.439 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 01:25:33.439 +03:00 [INF] Hosting environment: Development
2025-06-02 01:25:33.439 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 01:25:35.367 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/1","StatusCode":200,"Duration":263,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"message\":\"The book fetched\",\"data\":{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"}}"}
2025-06-02 01:25:36.798 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/1","StatusCode":200,"Duration":86,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"message\":\"The book fetched\",\"data\":{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"}}"}
2025-06-02 01:25:37.333 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/1","StatusCode":200,"Duration":36,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"message\":\"The book fetched\",\"data\":{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"}}"}
2025-06-02 01:25:37.505 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/1","StatusCode":200,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"message\":\"The book fetched\",\"data\":{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"}}"}
2025-06-02 01:25:37.668 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/1","StatusCode":200,"Duration":16,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"message\":\"The book fetched\",\"data\":{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"}}"}
2025-06-02 01:25:37.839 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/1","StatusCode":200,"Duration":15,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"message\":\"The book fetched\",\"data\":{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"}}"}
2025-06-02 01:25:37.984 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/1","StatusCode":200,"Duration":14,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"message\":\"The book fetched\",\"data\":{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"}}"}
2025-06-02 01:25:38.118 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/1","StatusCode":200,"Duration":14,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"message\":\"The book fetched\",\"data\":{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"}}"}
2025-06-02 01:25:38.493 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/1","StatusCode":200,"Duration":19,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"message\":\"The book fetched\",\"data\":{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"}}"}
2025-06-02 01:26:09.165 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/swagger/index.html","StatusCode":200,"Duration":80,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Swagger UI</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./index.css\">\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" />\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n       \n</head>\n\n<body>\n    <div id=\"swagger-ui\"></div>\n\n    <script src=\"./swagger-ui-bundle.js\" charset=\"utf-8\"></script>\n    <script src=\"./swagger-ui-standalone-preset.js\" charset=\"utf-8\"></script>\n    <script src=\"index.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n"}
2025-06-02 01:26:09.482 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/swagger/v1/swagger.json","StatusCode":200,"Duration":125,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\n  \"openapi\": \"3.0.4\",\n  \"info\": {\n    \"title\": \"Your API\",\n    \"version\": \"v1\"\n  },\n  \"paths\": {\n    \"/Auth/login\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Auth/register\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Auth/refresh-token\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Book\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Book/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/checkout/{userId}\": {\n      \"get\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/CartItem\": {\n      \"post\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/CartItem/{id}\": {\n      \"put\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/Order\": {\n      \"post\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/User\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/User/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"AddToCartItemRequest\": {\n        \"required\": [\n          \"bookId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"quantity\": {\n            \"maximum\": 1000000,\n            \"minimum\": 1,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Book\": {\n        \"required\": [\n          \"author\",\n          \"isAvailable\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"maxLength\": 50,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Book\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookStoreRequest\": {\n        \"required\": [\n          \"author\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookUpdateRequest\": {\n        \"required\": [\n          \"author\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItem\": {\n        \"required\": [\n          \"bookId\",\n          \"quantity\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"book\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemListResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CartItem\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/CartItem\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemUpdateRequest\": {\n        \"required\": [\n          \"quantity\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"quantity\": {\n            \"maximum\": 1000000,\n            \"minimum\": 1,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginRequest\": {\n        \"required\": [\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginResponseResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/LoginResponse\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Order\": {\n        \"required\": [\n          \"totalAmount\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"totalAmount\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"discount\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"shippingAddress\": {\n            \"maxLength\": 100,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"isShipped\": {\n            \"type\": \"boolean\"\n          },\n          \"isApproved\": {\n            \"type\": \"boolean\"\n          },\n          \"isRejected\": {\n            \"type\": \"boolean\"\n          },\n          \"paymentMethod\": {\n            \"$ref\": \"#/components/schemas/PaymentMethod\"\n          },\n          \"orderItems\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OrderItem\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderItem\": {\n        \"required\": [\n          \"bookId\",\n          \"orderId\",\n          \"quantity\",\n          \"unitPrice\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"orderId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"unitPrice\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"book\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Order\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"PaymentMethod\": {\n        \"enum\": [\n          \"FIB\",\n          \"ZainCash\",\n          \"QI\",\n          \"MasterCard\",\n          \"VisaCard\",\n          \"WesternUnion\",\n          \"ApplyPay\",\n          \"Cash\"\n        ],\n        \"type\": \"string\"\n      },\n      \"PlaceOrderRequest\": {\n        \"required\": [\n          \"paymentMethod\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"shippingAddress\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"paymentMethod\": {\n            \"$ref\": \"#/components/schemas/PaymentMethod\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"RefreshTokenRequest\": {\n        \"required\": [\n          \"refreshToken\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"refreshToken\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"StringResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"User\": {\n        \"required\": [\n          \"name\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 3,\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserDto\": {\n        \"required\": [\n          \"name\",\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 3,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"maxLength\": 100,\n            \"minLength\": 6,\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/User\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/User\"\n          }\n        },\n        \"additionalProperties\": false\n      }\n    },\n    \"securitySchemes\": {\n      \"Bearer\": {\n        \"type\": \"http\",\n        \"description\": \"Authorization header using the Bearer scheme. Example: 'Bearer {token}'\",\n        \"scheme\": \"bearer\"\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"Bearer\": [ ]\n    }\n  ]\n}"}
2025-06-02 01:26:16.140 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 01:26:16.142 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 01:26:16.179 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 01:26:16.179 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 01:26:16.194 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book","StatusCode":200,"Duration":127,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":2,\"title\":\"Kurdish Legends\",\"author\":\"Aryo Hadi\",\"genre\":\"History\",\"price\":18.500000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":3,\"page\":1,\"pageSize\":10}"}
2025-06-02 01:26:31.759 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/User","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":""}
2025-06-02 01:26:33.694 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/User","StatusCode":401,"Duration":2,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":""}
2025-06-02 01:26:47.714 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book","StatusCode":200,"Duration":49,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":2,\"title\":\"Kurdish Legends\",\"author\":\"Aryo Hadi\",\"genre\":\"History\",\"price\":18.500000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":3,\"page\":1,\"pageSize\":10}"}
2025-06-02 01:27:46.009 +03:00 [INF] Application is shutting down...
2025-06-02 01:27:49.909 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 01:27:49.942 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 01:27:49.942 +03:00 [INF] Hosting environment: Development
2025-06-02 01:27:49.942 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 01:27:51.242 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 01:27:51.245 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 01:27:51.305 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 01:27:51.305 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 01:27:51.428 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book","StatusCode":200,"Duration":275,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":2,\"title\":\"Kurdish Legends\",\"author\":\"Aryo Hadi\",\"genre\":\"History\",\"price\":18.500000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":3,\"page\":1,\"pageSize\":10}"}
2025-06-02 01:27:52.479 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book","StatusCode":200,"Duration":97,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":2,\"title\":\"Kurdish Legends\",\"author\":\"Aryo Hadi\",\"genre\":\"History\",\"price\":18.500000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":3,\"page\":1,\"pageSize\":10}"}
2025-06-02 01:28:06.492 +03:00 [INF] Application is shutting down...
2025-06-02 01:28:10.062 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 01:28:10.086 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 01:28:10.087 +03:00 [INF] Hosting environment: Development
2025-06-02 01:28:10.087 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 01:28:12.434 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 01:28:12.438 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 01:28:12.498 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 01:28:12.498 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 01:28:12.619 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book","StatusCode":200,"Duration":296,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":2,\"title\":\"Kurdish Legends\",\"author\":\"Aryo Hadi\",\"genre\":\"History\",\"price\":18.500000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":3,\"page\":1,\"pageSize\":10}"}
2025-06-02 01:28:13.643 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book","StatusCode":200,"Duration":77,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":2,\"title\":\"Kurdish Legends\",\"author\":\"Aryo Hadi\",\"genre\":\"History\",\"price\":18.500000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":3,\"page\":1,\"pageSize\":10}"}
2025-06-02 01:28:14.464 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book","StatusCode":200,"Duration":40,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":2,\"title\":\"Kurdish Legends\",\"author\":\"Aryo Hadi\",\"genre\":\"History\",\"price\":18.500000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":3,\"page\":1,\"pageSize\":10}"}
2025-06-02 02:57:38.386 +03:00 [INF] Application is shutting down...
2025-06-02 02:57:43.621 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 02:57:43.649 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 02:57:43.649 +03:00 [INF] Hosting environment: Development
2025-06-02 02:57:43.649 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 02:57:47.692 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/swagger/index.html","StatusCode":200,"Duration":70,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Swagger UI</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./index.css\">\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" />\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n       \n</head>\n\n<body>\n    <div id=\"swagger-ui\"></div>\n\n    <script src=\"./swagger-ui-bundle.js\" charset=\"utf-8\"></script>\n    <script src=\"./swagger-ui-standalone-preset.js\" charset=\"utf-8\"></script>\n    <script src=\"index.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n"}
2025-06-02 02:57:47.985 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/swagger/v1/swagger.json","StatusCode":200,"Duration":105,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\n  \"openapi\": \"3.0.4\",\n  \"info\": {\n    \"title\": \"Your API\",\n    \"version\": \"v1\"\n  },\n  \"paths\": {\n    \"/Auth/login\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Auth/register\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Auth/refresh-token\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Book\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Book/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/checkout/{userId}\": {\n      \"get\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/CartItem\": {\n      \"post\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/CartItem/{id}\": {\n      \"put\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/Order/place-order\": {\n      \"post\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Order/orders\": {\n      \"get\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Order/orders/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/User\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/User/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"AddToCartItemRequest\": {\n        \"required\": [\n          \"bookId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"quantity\": {\n            \"maximum\": 1000000,\n            \"minimum\": 1,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Book\": {\n        \"required\": [\n          \"author\",\n          \"isAvailable\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"maxLength\": 50,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Book\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookStoreRequest\": {\n        \"required\": [\n          \"author\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookUpdateRequest\": {\n        \"required\": [\n          \"author\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItem\": {\n        \"required\": [\n          \"bookId\",\n          \"quantity\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"book\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemListResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CartItem\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/CartItem\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemUpdateRequest\": {\n        \"required\": [\n          \"quantity\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"quantity\": {\n            \"maximum\": 1000000,\n            \"minimum\": 1,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginRequest\": {\n        \"required\": [\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginResponseResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/LoginResponse\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Order\": {\n        \"required\": [\n          \"totalAmount\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"totalAmount\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"discount\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"shippingAddress\": {\n            \"maxLength\": 100,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"isShipped\": {\n            \"type\": \"boolean\"\n          },\n          \"isApproved\": {\n            \"type\": \"boolean\"\n          },\n          \"isRejected\": {\n            \"type\": \"boolean\"\n          },\n          \"paymentMethod\": {\n            \"$ref\": \"#/components/schemas/PaymentMethod\"\n          },\n          \"orderItems\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OrderItem\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderItem\": {\n        \"required\": [\n          \"bookId\",\n          \"orderId\",\n          \"quantity\",\n          \"unitPrice\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"orderId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"unitPrice\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"book\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Order\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Order\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"PaymentMethod\": {\n        \"enum\": [\n          \"FIB\",\n          \"ZainCash\",\n          \"QI\",\n          \"MasterCard\",\n          \"VisaCard\",\n          \"WesternUnion\",\n          \"ApplyPay\",\n          \"Cash\"\n        ],\n        \"type\": \"string\"\n      },\n      \"PlaceOrderRequest\": {\n        \"required\": [\n          \"paymentMethod\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"shippingAddress\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"paymentMethod\": {\n            \"$ref\": \"#/components/schemas/PaymentMethod\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"RefreshTokenRequest\": {\n        \"required\": [\n          \"refreshToken\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"refreshToken\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"StringResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"User\": {\n        \"required\": [\n          \"name\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 3,\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserDto\": {\n        \"required\": [\n          \"name\",\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 3,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"maxLength\": 100,\n            \"minLength\": 6,\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/User\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/User\"\n          }\n        },\n        \"additionalProperties\": false\n      }\n    },\n    \"securitySchemes\": {\n      \"Bearer\": {\n        \"type\": \"http\",\n        \"description\": \"Authorization header using the Bearer scheme. Example: 'Bearer {token}'\",\n        \"scheme\": \"bearer\"\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"Bearer\": [ ]\n    }\n  ]\n}"}
2025-06-02 03:04:45.667 +03:00 [INF] Application is shutting down...
2025-06-02 03:04:49.817 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 03:04:49.855 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 03:04:49.855 +03:00 [INF] Hosting environment: Development
2025-06-02 03:04:49.855 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 03:04:58.114 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/swagger/index.html","StatusCode":200,"Duration":79,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Swagger UI</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./index.css\">\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" />\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n       \n</head>\n\n<body>\n    <div id=\"swagger-ui\"></div>\n\n    <script src=\"./swagger-ui-bundle.js\" charset=\"utf-8\"></script>\n    <script src=\"./swagger-ui-standalone-preset.js\" charset=\"utf-8\"></script>\n    <script src=\"index.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n"}
2025-06-02 03:04:58.333 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/swagger/v1/swagger.json","StatusCode":200,"Duration":115,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\n  \"openapi\": \"3.0.4\",\n  \"info\": {\n    \"title\": \"Your API\",\n    \"version\": \"v1\"\n  },\n  \"paths\": {\n    \"/Auth/login\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Auth/register\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Auth/refresh-token\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Book\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Book/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/checkout/{userId}\": {\n      \"get\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/CartItem\": {\n      \"post\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/CartItem/{id}\": {\n      \"put\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/Order/place-order\": {\n      \"post\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Order/orders\": {\n      \"get\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Order/orders/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Order/orders/{orderId}/reject\": {\n      \"patch\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Order/orders/{orderId}/accept\": {\n      \"patch\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Order/orders/{orderId}/ship\": {\n      \"patch\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/User\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/User/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"AddToCartItemRequest\": {\n        \"required\": [\n          \"bookId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"quantity\": {\n            \"maximum\": 1000000,\n            \"minimum\": 1,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Book\": {\n        \"required\": [\n          \"author\",\n          \"isAvailable\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"maxLength\": 50,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Book\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookStoreRequest\": {\n        \"required\": [\n          \"author\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookUpdateRequest\": {\n        \"required\": [\n          \"author\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItem\": {\n        \"required\": [\n          \"bookId\",\n          \"quantity\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"book\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemListResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CartItem\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/CartItem\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemUpdateRequest\": {\n        \"required\": [\n          \"quantity\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"quantity\": {\n            \"maximum\": 1000000,\n            \"minimum\": 1,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginRequest\": {\n        \"required\": [\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginResponseResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/LoginResponse\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Order\": {\n        \"required\": [\n          \"totalAmount\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"totalAmount\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"discount\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"shippingAddress\": {\n            \"maxLength\": 100,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"isShipped\": {\n            \"type\": \"boolean\"\n          },\n          \"isApproved\": {\n            \"type\": \"boolean\"\n          },\n          \"isRejected\": {\n            \"type\": \"boolean\"\n          },\n          \"paymentMethod\": {\n            \"$ref\": \"#/components/schemas/PaymentMethod\"\n          },\n          \"orderItems\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OrderItem\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderItem\": {\n        \"required\": [\n          \"bookId\",\n          \"orderId\",\n          \"quantity\",\n          \"unitPrice\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"orderId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"unitPrice\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"book\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Order\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Order\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"PaymentMethod\": {\n        \"enum\": [\n          \"FIB\",\n          \"ZainCash\",\n          \"QI\",\n          \"MasterCard\",\n          \"VisaCard\",\n          \"WesternUnion\",\n          \"ApplyPay\",\n          \"Cash\"\n        ],\n        \"type\": \"string\"\n      },\n      \"PlaceOrderRequest\": {\n        \"required\": [\n          \"paymentMethod\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"shippingAddress\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"paymentMethod\": {\n            \"$ref\": \"#/components/schemas/PaymentMethod\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"RefreshTokenRequest\": {\n        \"required\": [\n          \"refreshToken\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"refreshToken\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"StringResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"User\": {\n        \"required\": [\n          \"name\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 3,\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserDto\": {\n        \"required\": [\n          \"name\",\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 3,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"maxLength\": 100,\n            \"minLength\": 6,\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/User\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/User\"\n          }\n        },\n        \"additionalProperties\": false\n      }\n    },\n    \"securitySchemes\": {\n      \"Bearer\": {\n        \"type\": \"http\",\n        \"description\": \"Authorization header using the Bearer scheme. Example: 'Bearer {token}'\",\n        \"scheme\": \"bearer\"\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"Bearer\": [ ]\n    }\n  ]\n}"}
2025-06-02 03:05:06.980 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:05:06.982 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:05:07.045 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:05:07.046 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:05:07.152 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book","StatusCode":200,"Duration":281,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":2,\"title\":\"Kurdish Legends\",\"author\":\"Aryo Hadi\",\"genre\":\"History\",\"price\":18.500000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":3,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:05:28.581 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/checkout/1","StatusCode":401,"Duration":25,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":""}
2025-06-02 03:05:54.479 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":200,"Duration":303,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"aryo\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Login successful \",\"data\":{\"token\":\"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYXJ5byIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWVpZGVudGlmaWVyIjoiMiIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9jbGFpbXMvcm9sZSI6IlVzZXIiLCJleHAiOjE3NDg4MjYzNTQsImlzcyI6IkJvb2tTdG9yZUFwcCIsImF1ZCI6Ik15QXdlc29tZUF1ZGllbmNlIn0.sUkPjaD3ckYGKsThrpjjltaAu1Pu3PfG9qp_ofMIvmn2-CPhZEguKy8_xBmo5EQXSZeFirozOc6BCrnc94l9KA\",\"refreshToken\":\"I5X6qDKMtQMuMGut7CdN+t+Vc2auGWUD+YW3BkjFCB4=\"}}"}
2025-06-02 03:06:18.139 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/checkout/1","StatusCode":401,"Duration":2,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":""}
2025-06-02 03:06:26.291 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/checkout/2","StatusCode":401,"Duration":1,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":""}
2025-06-02 03:06:52.880 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/checkout/1","StatusCode":200,"Duration":162,"User":"UserId: 2, UserName: aryo","RequestBody":"","ResponseBody":"{\"message\":\"Checkout items\",\"data\":[]}"}
2025-06-02 03:06:59.181 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/checkout/2","StatusCode":200,"Duration":65,"User":"UserId: 2, UserName: aryo","RequestBody":"","ResponseBody":"{\"message\":\"Checkout items\",\"data\":[{\"id\":3,\"userId\":2,\"bookId\":2,\"quantity\":1,\"book\":{\"id\":2,\"title\":\"Kurdish Legends\",\"author\":\"Aryo Hadi\",\"genre\":\"History\",\"price\":18.500000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},\"createdDate\":\"2025-05-08T01:51:10\"}]}"}
2025-06-02 03:07:25.970 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":200,"Duration":139,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"azmir\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Login successful \",\"data\":{\"token\":\"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYXptaXIiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOiJBZG1pbiIsImV4cCI6MTc0ODgyNjQ0NSwiaXNzIjoiQm9va1N0b3JlQXBwIiwiYXVkIjoiTXlBd2Vzb21lQXVkaWVuY2UifQ.SeQiNYup1R8oi23iOA8j_q4VYhPkuqOIXqstFaw8T9sr-ojwC_UcyDqNs_caoCGJOGqUWCGGnW3fNeB0wL9jeQ\",\"refreshToken\":\"pZbd2RdvLzP3sXhM6oOM2y5Sdg8YDBCgaCQMriL+aek=\"}}"}
2025-06-02 03:08:01.203 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/checkout/2","StatusCode":200,"Duration":32,"User":"UserId: 1, UserName: azmir","RequestBody":"","ResponseBody":"{\"message\":\"Checkout items\",\"data\":[{\"id\":3,\"userId\":2,\"bookId\":2,\"quantity\":1,\"book\":{\"id\":2,\"title\":\"Kurdish Legends\",\"author\":\"Aryo Hadi\",\"genre\":\"History\",\"price\":18.500000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},\"createdDate\":\"2025-05-08T01:51:10\"}]}"}
2025-06-02 03:08:10.486 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:08:10.487 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:08:10.500 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:08:10.500 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:08:10.553 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Order/orders","StatusCode":200,"Duration":108,"User":"UserId: 1, UserName: azmir","RequestBody":"","ResponseBody":"{\"message\":\"List of Paginated Orders\",\"data\":{\"items\":[{\"id\":1,\"userId\":1,\"totalAmount\":0.0000000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya Nwsaran\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"Cash\",\"orderItems\":[],\"createdDate\":\"2025-05-08T07:04:57\"},{\"id\":2,\"userId\":1,\"totalAmount\":0.0000000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya Nwsaran\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"Cash\",\"orderItems\":[],\"createdDate\":\"2025-05-08T07:05:52\"},{\"id\":3,\"userId\":1,\"totalAmount\":0.0000000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya Nwsaran\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"Cash\",\"orderItems\":[],\"createdDate\":\"2025-05-08T07:06:01\"},{\"id\":4,\"userId\":1,\"totalAmount\":81.49000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya Nwsaran\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"Cash\",\"orderItems\":[],\"createdDate\":\"2025-05-08T07:09:40\"},{\"id\":5,\"userId\":1,\"totalAmount\":30.000000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya Nwsaran\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"Cash\",\"orderItems\":[],\"createdDate\":\"2025-05-08T07:17:18\"},{\"id\":6,\"userId\":1,\"totalAmount\":25.990000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"FIB\",\"orderItems\":[],\"createdDate\":\"2025-05-08T07:34:20\"},{\"id\":7,\"userId\":1,\"totalAmount\":70.480000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Chwarqwrna\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"FIB\",\"orderItems\":[],\"createdDate\":\"2025-05-08T12:55:57\"}],\"totalCount\":7,\"page\":1,\"pageSize\":10}}"}
2025-06-02 03:09:46.421 +03:00 [INF] Application is shutting down...
2025-06-02 03:09:50.795 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 03:09:50.820 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 03:09:50.820 +03:00 [INF] Hosting environment: Development
2025-06-02 03:09:50.820 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 03:09:52.822 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:09:52.824 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:09:52.894 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:09:52.895 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:09:53.150 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Order/orders","StatusCode":200,"Duration":447,"User":"UserId: 1, UserName: azmir","RequestBody":"","ResponseBody":"{\"message\":\"List of Paginated Orders\",\"data\":{\"items\":[{\"id\":1,\"userId\":1,\"totalAmount\":0.0000000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya Nwsaran\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"Cash\",\"orderItems\":[],\"createdDate\":\"2025-05-08T07:04:57\"},{\"id\":2,\"userId\":1,\"totalAmount\":0.0000000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya Nwsaran\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"Cash\",\"orderItems\":[],\"createdDate\":\"2025-05-08T07:05:52\"},{\"id\":3,\"userId\":1,\"totalAmount\":0.0000000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya Nwsaran\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"Cash\",\"orderItems\":[],\"createdDate\":\"2025-05-08T07:06:01\"},{\"id\":4,\"userId\":1,\"totalAmount\":81.49000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya Nwsaran\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"Cash\",\"orderItems\":[{\"id\":1,\"orderId\":4,\"bookId\":1,\"quantity\":1,\"unitPrice\":25.990000000000000000000000000,\"book\":null},{\"id\":2,\"orderId\":4,\"bookId\":2,\"quantity\":3,\"unitPrice\":18.500000000000000000000000000,\"book\":null}],\"createdDate\":\"2025-05-08T07:09:40\"},{\"id\":5,\"userId\":1,\"totalAmount\":30.000000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya Nwsaran\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"Cash\",\"orderItems\":[{\"id\":3,\"orderId\":5,\"bookId\":3,\"quantity\":1,\"unitPrice\":30.000000000000000000000000000,\"book\":null}],\"createdDate\":\"2025-05-08T07:17:18\"},{\"id\":6,\"userId\":1,\"totalAmount\":25.990000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"FIB\",\"orderItems\":[{\"id\":4,\"orderId\":6,\"bookId\":1,\"quantity\":1,\"unitPrice\":25.990000000000000000000000000,\"book\":null}],\"createdDate\":\"2025-05-08T07:34:20\"},{\"id\":7,\"userId\":1,\"totalAmount\":70.480000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Chwarqwrna\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"FIB\",\"orderItems\":[{\"id\":5,\"orderId\":7,\"bookId\":1,\"quantity\":2,\"unitPrice\":25.990000000000000000000000000,\"book\":null},{\"id\":6,\"orderId\":7,\"bookId\":2,\"quantity\":1,\"unitPrice\":18.500000000000000000000000000,\"book\":null}],\"createdDate\":\"2025-05-08T12:55:57\"}],\"totalCount\":7,\"page\":1,\"pageSize\":10}}"}
2025-06-02 03:11:21.680 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Order/orders/1","StatusCode":200,"Duration":99,"User":"UserId: 1, UserName: azmir","RequestBody":"","ResponseBody":"{\"message\":\"Order\",\"data\":{\"id\":1,\"userId\":1,\"totalAmount\":0.0000000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya Nwsaran\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"Cash\",\"orderItems\":[],\"createdDate\":\"2025-05-08T07:04:57\"}}"}
2025-06-02 03:11:27.292 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Order/orders/7","StatusCode":200,"Duration":36,"User":"UserId: 1, UserName: azmir","RequestBody":"","ResponseBody":"{\"message\":\"Order\",\"data\":{\"id\":7,\"userId\":1,\"totalAmount\":70.480000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Chwarqwrna\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"FIB\",\"orderItems\":[],\"createdDate\":\"2025-05-08T12:55:57\"}}"}
2025-06-02 03:11:33.339 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Order/orders/6","StatusCode":200,"Duration":31,"User":"UserId: 1, UserName: azmir","RequestBody":"","ResponseBody":"{\"message\":\"Order\",\"data\":{\"id\":6,\"userId\":1,\"totalAmount\":25.990000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"FIB\",\"orderItems\":[],\"createdDate\":\"2025-05-08T07:34:20\"}}"}
2025-06-02 03:12:08.993 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Order/orders/4","StatusCode":200,"Duration":54,"User":"UserId: 1, UserName: azmir","RequestBody":"","ResponseBody":"{\"message\":\"Order\",\"data\":{\"id\":4,\"userId\":1,\"totalAmount\":81.49000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya Nwsaran\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"Cash\",\"orderItems\":[],\"createdDate\":\"2025-05-08T07:09:40\"}}"}
2025-06-02 03:28:56.866 +03:00 [INF] Application is shutting down...
2025-06-02 03:29:02.249 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 03:29:02.327 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 03:29:02.328 +03:00 [INF] Hosting environment: Development
2025-06-02 03:29:02.328 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 03:30:11.336 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:30:11.340 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:30:11.400 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:30:11.400 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:30:11.522 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book","StatusCode":200,"Duration":288,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":2,\"title\":\"Kurdish Legends\",\"author\":\"Aryo Hadi\",\"genre\":\"History\",\"price\":18.500000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":3,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:30:18.726 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/book","StatusCode":200,"Duration":100,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":2,\"title\":\"Kurdish Legends\",\"author\":\"Aryo Hadi\",\"genre\":\"History\",\"price\":18.500000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":3,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:30:20.073 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/book","StatusCode":200,"Duration":43,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":2,\"title\":\"Kurdish Legends\",\"author\":\"Aryo Hadi\",\"genre\":\"History\",\"price\":18.500000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":3,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:30:50.490 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/book","StatusCode":200,"Duration":48,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":2,\"title\":\"Kurdish Legends\",\"author\":\"Aryo Hadi\",\"genre\":\"History\",\"price\":18.500000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":3,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:31:04.487 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/book","StatusCode":200,"Duration":31,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":2,\"title\":\"Kurdish Legends\",\"author\":\"Aryo Hadi\",\"genre\":\"History\",\"price\":18.500000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":3,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:31:05.710 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/book","StatusCode":200,"Duration":31,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":2,\"title\":\"Kurdish Legends\",\"author\":\"Aryo Hadi\",\"genre\":\"History\",\"price\":18.500000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":3,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:31:06.574 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/book","StatusCode":200,"Duration":20,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":2,\"title\":\"Kurdish Legends\",\"author\":\"Aryo Hadi\",\"genre\":\"History\",\"price\":18.500000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":3,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:31:21.807 +03:00 [INF] Application is shutting down...
2025-06-02 03:31:26.239 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 03:31:26.274 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 03:31:26.275 +03:00 [INF] Hosting environment: Development
2025-06-02 03:31:26.275 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 03:31:27.593 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/book","StatusCode":404,"Duration":39,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"\"Endpoint not found\""}
2025-06-02 03:31:28.976 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/book","StatusCode":404,"Duration":3,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"\"Endpoint not found\""}
2025-06-02 03:31:30.163 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/book","StatusCode":404,"Duration":1,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"\"Endpoint not found\""}
2025-06-02 03:31:46.985 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/search-books","StatusCode":404,"Duration":4,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"\"Endpoint not found\""}
2025-06-02 03:31:48.372 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/search-books","StatusCode":404,"Duration":0,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"\"Endpoint not found\""}
2025-06-02 03:31:59.541 +03:00 [INF] Application is shutting down...
2025-06-02 03:32:02.857 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 03:32:02.882 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 03:32:02.882 +03:00 [INF] Hosting environment: Development
2025-06-02 03:32:02.882 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 03:32:03.588 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/swagger/index.html","StatusCode":200,"Duration":85,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Swagger UI</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./index.css\">\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" />\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n       \n</head>\n\n<body>\n    <div id=\"swagger-ui\"></div>\n\n    <script src=\"./swagger-ui-bundle.js\" charset=\"utf-8\"></script>\n    <script src=\"./swagger-ui-standalone-preset.js\" charset=\"utf-8\"></script>\n    <script src=\"index.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n"}
2025-06-02 03:32:03.906 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/swagger/v1/swagger.json","StatusCode":200,"Duration":162,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\n  \"openapi\": \"3.0.4\",\n  \"info\": {\n    \"title\": \"Your API\",\n    \"version\": \"v1\"\n  },\n  \"paths\": {\n    \"/Auth/login\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Auth/register\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Auth/refresh-token\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Book/search-books\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Book/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/Book\": {\n      \"post\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/checkout/{userId}\": {\n      \"get\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/CartItem\": {\n      \"post\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/CartItem/{id}\": {\n      \"put\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/Order/place-order\": {\n      \"post\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Order/orders\": {\n      \"get\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Order/orders/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Order/orders/{orderId}/reject\": {\n      \"patch\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Order/orders/{orderId}/accept\": {\n      \"patch\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Order/orders/{orderId}/ship\": {\n      \"patch\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/User\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/User/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"AddToCartItemRequest\": {\n        \"required\": [\n          \"bookId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"quantity\": {\n            \"maximum\": 1000000,\n            \"minimum\": 1,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Book\": {\n        \"required\": [\n          \"author\",\n          \"isAvailable\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"maxLength\": 50,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Book\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookStoreRequest\": {\n        \"required\": [\n          \"author\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookUpdateRequest\": {\n        \"required\": [\n          \"author\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItem\": {\n        \"required\": [\n          \"bookId\",\n          \"quantity\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"book\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemListResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CartItem\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/CartItem\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemUpdateRequest\": {\n        \"required\": [\n          \"quantity\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"quantity\": {\n            \"maximum\": 1000000,\n            \"minimum\": 1,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginRequest\": {\n        \"required\": [\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginResponseResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/LoginResponse\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Order\": {\n        \"required\": [\n          \"totalAmount\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"totalAmount\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"discount\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"shippingAddress\": {\n            \"maxLength\": 100,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"isShipped\": {\n            \"type\": \"boolean\"\n          },\n          \"isApproved\": {\n            \"type\": \"boolean\"\n          },\n          \"isRejected\": {\n            \"type\": \"boolean\"\n          },\n          \"paymentMethod\": {\n            \"$ref\": \"#/components/schemas/PaymentMethod\"\n          },\n          \"orderItems\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OrderItem\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderItem\": {\n        \"required\": [\n          \"bookId\",\n          \"orderId\",\n          \"quantity\",\n          \"unitPrice\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"orderId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"unitPrice\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"book\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Order\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Order\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"PaymentMethod\": {\n        \"enum\": [\n          \"FIB\",\n          \"ZainCash\",\n          \"QI\",\n          \"MasterCard\",\n          \"VisaCard\",\n          \"WesternUnion\",\n          \"ApplyPay\",\n          \"Cash\"\n        ],\n        \"type\": \"string\"\n      },\n      \"PlaceOrderRequest\": {\n        \"required\": [\n          \"paymentMethod\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"shippingAddress\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"paymentMethod\": {\n            \"$ref\": \"#/components/schemas/PaymentMethod\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"RefreshTokenRequest\": {\n        \"required\": [\n          \"refreshToken\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"refreshToken\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"StringResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"User\": {\n        \"required\": [\n          \"name\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 3,\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserDto\": {\n        \"required\": [\n          \"name\",\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 3,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"maxLength\": 100,\n            \"minLength\": 6,\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/User\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/User\"\n          }\n        },\n        \"additionalProperties\": false\n      }\n    },\n    \"securitySchemes\": {\n      \"Bearer\": {\n        \"type\": \"http\",\n        \"description\": \"Authorization header using the Bearer scheme. Example: 'Bearer {token}'\",\n        \"scheme\": \"bearer\"\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"Bearer\": [ ]\n    }\n  ]\n}"}
2025-06-02 03:32:39.901 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:32:39.904 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:32:39.978 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:32:39.978 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:32:40.091 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/book/search-books","StatusCode":200,"Duration":292,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":2,\"title\":\"Kurdish Legends\",\"author\":\"Aryo Hadi\",\"genre\":\"History\",\"price\":18.500000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":3,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:33:05.353 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/User","StatusCode":401,"Duration":22,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":""}
2025-06-02 03:33:20.871 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":200,"Duration":315,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"azmir\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Login successful \",\"data\":{\"token\":\"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYXptaXIiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOiJBZG1pbiIsImV4cCI6MTc0ODgyODAwMCwiaXNzIjoiQm9va1N0b3JlQXBwIiwiYXVkIjoiTXlBd2Vzb21lQXVkaWVuY2UifQ.cUvHWjn8lbM5gK0Uyct34VXqQj_Xif7nngfNJMSG1FATglIGF-W1eI9dUAxtOTs52CIEu8xFy0bG5bVvBUt50w\",\"refreshToken\":\"2g4ZFavvMLd61Rp7SRNve395AJnEkClADWnbUSDuGPk=\"}}"}
2025-06-02 03:33:44.214 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:33:44.215 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:33:44.220 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:33:44.220 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:33:44.228 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/User","StatusCode":200,"Duration":59,"User":"UserId: 1, UserName: azmir","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"name\":\"Azmir Sabir\",\"username\":\"azmir\",\"role\":\"Admin\",\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":2,\"name\":\"Aryo Hadi\",\"username\":\"aryo\",\"role\":\"User\",\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"name\":\"Sabir Sleman\",\"username\":\"sabir\",\"role\":\"User\",\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":4,\"name\":\"Hadi hamadamin\",\"username\":\"hadi\",\"role\":\"User\",\"createdDate\":\"2025-05-31T20:10:59\"},{\"id\":5,\"name\":\"Aso Hamadamin\",\"username\":\"aso\",\"role\":\"User\",\"createdDate\":\"2025-05-31T20:11:38\"},{\"id\":6,\"name\":\"bnesht\",\"username\":\"bnesht\",\"role\":\"User\",\"createdDate\":\"2025-06-01T15:31:51\"},{\"id\":8,\"name\":\"karim\",\"username\":\"karim\",\"role\":\"\",\"createdDate\":\"2025-06-01T20:26:25\"},{\"id\":9,\"name\":\"soltan\",\"username\":\"soltan\",\"role\":\"\",\"createdDate\":\"2025-06-01T20:50:16\"},{\"id\":10,\"name\":\"Saman\",\"username\":\"saman\",\"role\":\"Admin\",\"createdDate\":\"2025-06-01T21:02:10\"}],\"totalCount\":9,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:34:22.231 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:34:22.232 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:34:22.242 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:34:22.242 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:34:22.248 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/User","StatusCode":200,"Duration":89,"User":"UserId: 1, UserName: azmir","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"name\":\"Azmir Sabir\",\"username\":\"azmir\",\"role\":\"Admin\",\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":1,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:35:13.641 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/search-books","StatusCode":200,"Duration":34,"User":"UserId: 1, UserName: azmir","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":2,\"title\":\"Kurdish Legends\",\"author\":\"Aryo Hadi\",\"genre\":\"History\",\"price\":18.500000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":3,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:35:35.044 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:35:35.044 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:35:35.049 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:35:35.049 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:35:35.056 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/search-books","StatusCode":200,"Duration":39,"User":"UserId: 1, UserName: azmir","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":2,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:35:58.363 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/search-books","StatusCode":200,"Duration":20,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":2,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:36:33.408 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/search-books","StatusCode":200,"Duration":42,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":2,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:36:39.282 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/search-books","StatusCode":200,"Duration":37,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":2,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:36:52.937 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/search-books","StatusCode":200,"Duration":33,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":2,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:36:55.018 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/search-books","StatusCode":200,"Duration":40,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":2,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:36:55.917 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/search-books","StatusCode":200,"Duration":36,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":2,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:36:56.780 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/search-books","StatusCode":200,"Duration":30,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":2,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:36:57.543 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/search-books","StatusCode":200,"Duration":29,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":2,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:37:36.150 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/Book/search-books","StatusCode":200,"Duration":21,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\"items\":[{\"id\":1,\"title\":\"The Art of Software\",\"author\":\"Azmir Sabir\",\"genre\":\"Technology\",\"price\":25.990000000000000000000000000,\"isAvailable\":false,\"createdDate\":\"2025-05-07T21:25:00\"},{\"id\":3,\"title\":\"Beyond the Horizon\",\"author\":\"Sabir Sleman\",\"genre\":\"Adventure\",\"price\":30.000000000000000000000000000,\"isAvailable\":true,\"createdDate\":\"2025-05-07T21:25:00\"}],\"totalCount\":2,\"page\":1,\"pageSize\":10}"}
2025-06-02 03:40:12.435 +03:00 [INF] Application is shutting down...
2025-06-02 03:40:16.761 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 03:40:16.787 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 03:40:16.787 +03:00 [INF] Hosting environment: Development
2025-06-02 03:40:16.787 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 03:40:26.749 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/swagger/index.html","StatusCode":200,"Duration":80,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Swagger UI</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./index.css\">\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" />\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n       \n</head>\n\n<body>\n    <div id=\"swagger-ui\"></div>\n\n    <script src=\"./swagger-ui-bundle.js\" charset=\"utf-8\"></script>\n    <script src=\"./swagger-ui-standalone-preset.js\" charset=\"utf-8\"></script>\n    <script src=\"index.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n"}
2025-06-02 03:40:26.970 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - Bookstore.Controllers.OrderController.PlaceOrder (Bookstore). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.PrepareGenerateOperation(IGrouping`2 group)
   at System.Linq.Enumerable.IteratorSelectIterator`2.MoveNext()
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperationsAsync(OpenApiDocument document, IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePathsAsync(OpenApiDocument document, IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository, Func`4 operationsGenerator)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePathsAsync(OpenApiDocument document, IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.RateLimiting.RateLimitingMiddleware.InvokeInternal(HttpContext context, EnableRateLimitingAttribute enableRateLimitingAttribute)
   at Bookstore.Middlewares.LoggingMiddleware.Invoke(HttpContext context) in /Users/jihad/RiderProjects/Bookstore/Bookstore/Middlewares/LoggingMiddleware.cs:line 30
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-06-02 03:40:26.979 +03:00 [ERR] An exception was thrown attempting to display the error page.
System.ObjectDisposedException: Cannot access a closed Stream.
   at System.IO.MemoryStream.Write(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.MemoryStream.WriteAsync(ReadOnlyMemory`1 buffer, CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at System.IO.Pipelines.StreamPipeWriter.FlushAsyncInternal(Boolean writeToStream, ReadOnlyMemory`1 data, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask`1.GetTaskForValueTaskSource(IValueTaskSource`1 t)
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.DisplayExceptionContent(ErrorContext errorContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-06-02 03:40:26.981 +03:00 [ERR] Connection id "0HND1DO8LLFLT", Request id "0HND1DO8LLFLT:00000002": An unhandled exception was thrown by the application.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - Bookstore.Controllers.OrderController.PlaceOrder (Bookstore). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.PrepareGenerateOperation(IGrouping`2 group)
   at System.Linq.Enumerable.IteratorSelectIterator`2.MoveNext()
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperationsAsync(OpenApiDocument document, IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePathsAsync(OpenApiDocument document, IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository, Func`4 operationsGenerator)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePathsAsync(OpenApiDocument document, IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.RateLimiting.RateLimitingMiddleware.InvokeInternal(HttpContext context, EnableRateLimitingAttribute enableRateLimitingAttribute)
   at Bookstore.Middlewares.LoggingMiddleware.Invoke(HttpContext context) in /Users/jihad/RiderProjects/Bookstore/Bookstore/Middlewares/LoggingMiddleware.cs:line 30
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-06-02 03:40:37.770 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/swagger/index.html","StatusCode":200,"Duration":5,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Swagger UI</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./index.css\">\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" />\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n       \n</head>\n\n<body>\n    <div id=\"swagger-ui\"></div>\n\n    <script src=\"./swagger-ui-bundle.js\" charset=\"utf-8\"></script>\n    <script src=\"./swagger-ui-standalone-preset.js\" charset=\"utf-8\"></script>\n    <script src=\"index.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n"}
2025-06-02 03:40:37.931 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - Bookstore.Controllers.OrderController.PlaceOrder (Bookstore). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.PrepareGenerateOperation(IGrouping`2 group)
   at System.Linq.Enumerable.IteratorSelectIterator`2.MoveNext()
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperationsAsync(OpenApiDocument document, IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePathsAsync(OpenApiDocument document, IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository, Func`4 operationsGenerator)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePathsAsync(OpenApiDocument document, IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.RateLimiting.RateLimitingMiddleware.InvokeInternal(HttpContext context, EnableRateLimitingAttribute enableRateLimitingAttribute)
   at Bookstore.Middlewares.LoggingMiddleware.Invoke(HttpContext context) in /Users/jihad/RiderProjects/Bookstore/Bookstore/Middlewares/LoggingMiddleware.cs:line 30
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-06-02 03:40:37.937 +03:00 [ERR] An exception was thrown attempting to display the error page.
System.ObjectDisposedException: Cannot access a closed Stream.
   at System.IO.MemoryStream.Write(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.MemoryStream.WriteAsync(ReadOnlyMemory`1 buffer, CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at System.IO.Pipelines.StreamPipeWriter.FlushAsyncInternal(Boolean writeToStream, ReadOnlyMemory`1 data, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask`1.GetTaskForValueTaskSource(IValueTaskSource`1 t)
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.DisplayExceptionContent(ErrorContext errorContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-06-02 03:40:37.939 +03:00 [ERR] Connection id "0HND1DO8LLFLV", Request id "0HND1DO8LLFLV:00000002": An unhandled exception was thrown by the application.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - Bookstore.Controllers.OrderController.PlaceOrder (Bookstore). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.PrepareGenerateOperation(IGrouping`2 group)
   at System.Linq.Enumerable.IteratorSelectIterator`2.MoveNext()
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperationsAsync(OpenApiDocument document, IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePathsAsync(OpenApiDocument document, IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository, Func`4 operationsGenerator)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePathsAsync(OpenApiDocument document, IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.RateLimiting.RateLimitingMiddleware.InvokeInternal(HttpContext context, EnableRateLimitingAttribute enableRateLimitingAttribute)
   at Bookstore.Middlewares.LoggingMiddleware.Invoke(HttpContext context) in /Users/jihad/RiderProjects/Bookstore/Bookstore/Middlewares/LoggingMiddleware.cs:line 30
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-06-02 03:40:41.240 +03:00 [INF] Application is shutting down...
2025-06-02 03:40:44.946 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 03:40:44.975 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 03:40:44.975 +03:00 [INF] Hosting environment: Development
2025-06-02 03:40:44.975 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 03:40:45.545 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/swagger/index.html","StatusCode":200,"Duration":87,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Swagger UI</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./index.css\">\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" />\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n       \n</head>\n\n<body>\n    <div id=\"swagger-ui\"></div>\n\n    <script src=\"./swagger-ui-bundle.js\" charset=\"utf-8\"></script>\n    <script src=\"./swagger-ui-standalone-preset.js\" charset=\"utf-8\"></script>\n    <script src=\"index.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n"}
2025-06-02 03:40:45.823 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/swagger/v1/swagger.json","StatusCode":200,"Duration":148,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\n  \"openapi\": \"3.0.4\",\n  \"info\": {\n    \"title\": \"Your API\",\n    \"version\": \"v1\"\n  },\n  \"paths\": {\n    \"/Auth/login\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Auth/register\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Auth/refresh-token\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Book/search-books\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Book/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/Book\": {\n      \"post\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/checkout/{userId}\": {\n      \"get\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/CartItem\": {\n      \"post\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/CartItem/{id}\": {\n      \"put\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/place-order\": {\n      \"post\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders\": {\n      \"get\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders/{orderId}/reject\": {\n      \"patch\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders/{orderId}/accept\": {\n      \"patch\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders/{orderId}/ship\": {\n      \"patch\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/User\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/User/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"AddToCartItemRequest\": {\n        \"required\": [\n          \"bookId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"quantity\": {\n            \"maximum\": 1000000,\n            \"minimum\": 1,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Book\": {\n        \"required\": [\n          \"author\",\n          \"isAvailable\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"maxLength\": 50,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Book\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookStoreRequest\": {\n        \"required\": [\n          \"author\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookUpdateRequest\": {\n        \"required\": [\n          \"author\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItem\": {\n        \"required\": [\n          \"bookId\",\n          \"quantity\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"book\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemListResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CartItem\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/CartItem\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemUpdateRequest\": {\n        \"required\": [\n          \"quantity\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"quantity\": {\n            \"maximum\": 1000000,\n            \"minimum\": 1,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginRequest\": {\n        \"required\": [\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginResponseResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/LoginResponse\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Order\": {\n        \"required\": [\n          \"totalAmount\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"totalAmount\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"discount\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"shippingAddress\": {\n            \"maxLength\": 100,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"isShipped\": {\n            \"type\": \"boolean\"\n          },\n          \"isApproved\": {\n            \"type\": \"boolean\"\n          },\n          \"isRejected\": {\n            \"type\": \"boolean\"\n          },\n          \"paymentMethod\": {\n            \"$ref\": \"#/components/schemas/PaymentMethod\"\n          },\n          \"orderItems\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OrderItem\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderItem\": {\n        \"required\": [\n          \"bookId\",\n          \"orderId\",\n          \"quantity\",\n          \"unitPrice\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"orderId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"unitPrice\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"book\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Order\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Order\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"PaymentMethod\": {\n        \"enum\": [\n          \"FIB\",\n          \"ZainCash\",\n          \"QI\",\n          \"MasterCard\",\n          \"VisaCard\",\n          \"WesternUnion\",\n          \"ApplyPay\",\n          \"Cash\"\n        ],\n        \"type\": \"string\"\n      },\n      \"PlaceOrderRequest\": {\n        \"required\": [\n          \"paymentMethod\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"shippingAddress\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"paymentMethod\": {\n            \"$ref\": \"#/components/schemas/PaymentMethod\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"RefreshTokenRequest\": {\n        \"required\": [\n          \"refreshToken\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"refreshToken\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"StringResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"User\": {\n        \"required\": [\n          \"name\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 3,\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserDto\": {\n        \"required\": [\n          \"name\",\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 3,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"maxLength\": 100,\n            \"minLength\": 6,\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/User\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/User\"\n          }\n        },\n        \"additionalProperties\": false\n      }\n    },\n    \"securitySchemes\": {\n      \"Bearer\": {\n        \"type\": \"http\",\n        \"description\": \"Authorization header using the Bearer scheme. Example: 'Bearer {token}'\",\n        \"scheme\": \"bearer\"\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"Bearer\": [ ]\n    }\n  ]\n}"}
2025-06-02 03:40:58.231 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/orders","StatusCode":401,"Duration":28,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":""}
2025-06-02 03:41:18.126 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":401,"Duration":195,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"azmirsabir\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Invalid username or password\"}"}
2025-06-02 03:41:27.824 +03:00 [INF] HTTP Request/Response Info: {"Method":"POST","Path":"/Auth/login","StatusCode":200,"Duration":314,"User":"UserId: , UserName: ","RequestBody":"{\"username\":\"azmir\",\"password\":\"***\"}","ResponseBody":"{\"message\":\"Login successful \",\"data\":{\"token\":\"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYXptaXIiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOiJBZG1pbiIsImV4cCI6MTc0ODgyODQ4NywiaXNzIjoiQm9va1N0b3JlQXBwIiwiYXVkIjoiTXlBd2Vzb21lQXVkaWVuY2UifQ.L3MWoLl88DDDzDONeagHQHJAW44JZvN9Danpks2y9-3C1jHuvDA0jrjk6eNXkDf326Df5RJdiRq_1z_3558pHg\",\"refreshToken\":\"LbYrIl1eJ27fMzdERptV8ZrryCmjM8MYhMGQqBi0iOE=\"}}"}
2025-06-02 03:41:57.580 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:41:57.582 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:41:57.622 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:41:57.622 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-02 03:41:57.740 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/orders","StatusCode":200,"Duration":267,"User":"UserId: 1, UserName: azmir","RequestBody":"","ResponseBody":"{\"message\":\"List of Paginated Orders\",\"data\":{\"items\":[{\"id\":1,\"userId\":1,\"totalAmount\":0.0000000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya Nwsaran\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"Cash\",\"orderItems\":[],\"createdDate\":\"2025-05-08T07:04:57\"},{\"id\":2,\"userId\":1,\"totalAmount\":0.0000000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya Nwsaran\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"Cash\",\"orderItems\":[],\"createdDate\":\"2025-05-08T07:05:52\"},{\"id\":3,\"userId\":1,\"totalAmount\":0.0000000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya Nwsaran\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"Cash\",\"orderItems\":[],\"createdDate\":\"2025-05-08T07:06:01\"},{\"id\":4,\"userId\":1,\"totalAmount\":81.49000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya Nwsaran\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"Cash\",\"orderItems\":[{\"id\":1,\"orderId\":4,\"bookId\":1,\"quantity\":1,\"unitPrice\":25.990000000000000000000000000,\"book\":null},{\"id\":2,\"orderId\":4,\"bookId\":2,\"quantity\":3,\"unitPrice\":18.500000000000000000000000000,\"book\":null}],\"createdDate\":\"2025-05-08T07:09:40\"},{\"id\":5,\"userId\":1,\"totalAmount\":30.000000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya Nwsaran\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"Cash\",\"orderItems\":[{\"id\":3,\"orderId\":5,\"bookId\":3,\"quantity\":1,\"unitPrice\":30.000000000000000000000000000,\"book\":null}],\"createdDate\":\"2025-05-08T07:17:18\"},{\"id\":6,\"userId\":1,\"totalAmount\":25.990000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Ranya\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"FIB\",\"orderItems\":[{\"id\":4,\"orderId\":6,\"bookId\":1,\"quantity\":1,\"unitPrice\":25.990000000000000000000000000,\"book\":null}],\"createdDate\":\"2025-05-08T07:34:20\"},{\"id\":7,\"userId\":1,\"totalAmount\":70.480000000000000000000000000,\"discount\":0.0000000000000000000000000000,\"shippingAddress\":\"Chwarqwrna\",\"isShipped\":false,\"isApproved\":false,\"isRejected\":false,\"paymentMethod\":\"FIB\",\"orderItems\":[{\"id\":5,\"orderId\":7,\"bookId\":1,\"quantity\":2,\"unitPrice\":25.990000000000000000000000000,\"book\":null},{\"id\":6,\"orderId\":7,\"bookId\":2,\"quantity\":1,\"unitPrice\":18.500000000000000000000000000,\"book\":null}],\"createdDate\":\"2025-05-08T12:55:57\"}],\"totalCount\":7,\"page\":1,\"pageSize\":10}}"}
2025-06-02 03:42:59.631 +03:00 [INF] HTTP Request/Response Info: {"Method":"PATCH","Path":"/orders/1/accept","StatusCode":200,"Duration":95,"User":"UserId: 1, UserName: azmir","RequestBody":"","ResponseBody":"{\"message\":\"Order 1 Accepted.\"}"}
2025-06-02 03:49:03.813 +03:00 [INF] Application is shutting down...
2025-06-02 03:49:07.189 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 03:49:07.214 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 03:49:07.215 +03:00 [INF] Hosting environment: Development
2025-06-02 03:49:07.215 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/Bookstore/Bookstore
2025-06-02 03:49:10.273 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/swagger/index.html","StatusCode":200,"Duration":70,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Swagger UI</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./index.css\">\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" />\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n       \n</head>\n\n<body>\n    <div id=\"swagger-ui\"></div>\n\n    <script src=\"./swagger-ui-bundle.js\" charset=\"utf-8\"></script>\n    <script src=\"./swagger-ui-standalone-preset.js\" charset=\"utf-8\"></script>\n    <script src=\"index.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n"}
2025-06-02 03:49:10.552 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/swagger/v1/swagger.json","StatusCode":200,"Duration":102,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\n  \"openapi\": \"3.0.4\",\n  \"info\": {\n    \"title\": \"Your API\",\n    \"version\": \"v1\"\n  },\n  \"paths\": {\n    \"/Auth/login\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Auth/register\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Auth/refresh-token\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Book/search-books\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Book/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/Book\": {\n      \"post\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/checkout/{userId}\": {\n      \"get\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/CartItem\": {\n      \"post\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/CartItem/{id}\": {\n      \"put\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/place-order\": {\n      \"post\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders\": {\n      \"get\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders/{orderId}/accept\": {\n      \"patch\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders/{orderId}/reject\": {\n      \"patch\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders/{orderId}/ship\": {\n      \"patch\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/User\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/User/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"AddToCartItemRequest\": {\n        \"required\": [\n          \"bookId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"quantity\": {\n            \"maximum\": 1000000,\n            \"minimum\": 1,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Book\": {\n        \"required\": [\n          \"author\",\n          \"isAvailable\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"maxLength\": 50,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Book\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookStoreRequest\": {\n        \"required\": [\n          \"author\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookUpdateRequest\": {\n        \"required\": [\n          \"author\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItem\": {\n        \"required\": [\n          \"bookId\",\n          \"quantity\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"book\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemListResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CartItem\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/CartItem\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemUpdateRequest\": {\n        \"required\": [\n          \"quantity\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"quantity\": {\n            \"maximum\": 1000000,\n            \"minimum\": 1,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginRequest\": {\n        \"required\": [\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginResponseResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/LoginResponse\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Order\": {\n        \"required\": [\n          \"totalAmount\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"totalAmount\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"discount\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"shippingAddress\": {\n            \"maxLength\": 100,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"isShipped\": {\n            \"type\": \"boolean\"\n          },\n          \"isApproved\": {\n            \"type\": \"boolean\"\n          },\n          \"isRejected\": {\n            \"type\": \"boolean\"\n          },\n          \"paymentMethod\": {\n            \"$ref\": \"#/components/schemas/PaymentMethod\"\n          },\n          \"orderItems\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OrderItem\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderItem\": {\n        \"required\": [\n          \"bookId\",\n          \"orderId\",\n          \"quantity\",\n          \"unitPrice\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"orderId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"unitPrice\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"book\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Order\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Order\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"PaymentMethod\": {\n        \"enum\": [\n          \"FIB\",\n          \"ZainCash\",\n          \"QI\",\n          \"MasterCard\",\n          \"VisaCard\",\n          \"WesternUnion\",\n          \"ApplyPay\",\n          \"Cash\"\n        ],\n        \"type\": \"string\"\n      },\n      \"PlaceOrderRequest\": {\n        \"required\": [\n          \"paymentMethod\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"shippingAddress\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"paymentMethod\": {\n            \"$ref\": \"#/components/schemas/PaymentMethod\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"RefreshTokenRequest\": {\n        \"required\": [\n          \"refreshToken\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"refreshToken\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"StringResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"User\": {\n        \"required\": [\n          \"name\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 3,\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserDto\": {\n        \"required\": [\n          \"name\",\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 3,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"maxLength\": 100,\n            \"minLength\": 6,\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/User\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/User\"\n          }\n        },\n        \"additionalProperties\": false\n      }\n    },\n    \"securitySchemes\": {\n      \"Bearer\": {\n        \"type\": \"http\",\n        \"description\": \"Authorization header using the Bearer scheme. Example: 'Bearer {token}'\",\n        \"scheme\": \"bearer\"\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"Bearer\": [ ]\n    }\n  ]\n}"}
2025-06-02 03:50:32.241 +03:00 [INF] Application is shutting down...
2025-06-02 04:15:17.216 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 04:15:17.242 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 04:15:17.242 +03:00 [INF] Hosting environment: Development
2025-06-02 04:15:17.242 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/OnlineBookstore/Bookstore
2025-06-02 04:15:41.079 +03:00 [INF] Application is shutting down...
2025-06-02 04:15:47.401 +03:00 [INF] Now listening on: http://localhost:5290
2025-06-02 04:15:47.426 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-02 04:15:47.426 +03:00 [INF] Hosting environment: Development
2025-06-02 04:15:47.426 +03:00 [INF] Content root path: /Users/jihad/RiderProjects/OnlineBookstore/Bookstore
2025-06-02 04:15:49.876 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/swagger/index.html","StatusCode":200,"Duration":84,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Swagger UI</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./index.css\">\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" />\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n       \n</head>\n\n<body>\n    <div id=\"swagger-ui\"></div>\n\n    <script src=\"./swagger-ui-bundle.js\" charset=\"utf-8\"></script>\n    <script src=\"./swagger-ui-standalone-preset.js\" charset=\"utf-8\"></script>\n    <script src=\"index.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n"}
2025-06-02 04:15:50.183 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/swagger/v1/swagger.json","StatusCode":200,"Duration":118,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\n  \"openapi\": \"3.0.4\",\n  \"info\": {\n    \"title\": \"Your API\",\n    \"version\": \"v1\"\n  },\n  \"paths\": {\n    \"/Auth/login\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Auth/register\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Auth/refresh-token\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Book/search-books\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Book/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/Book\": {\n      \"post\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/checkout/{userId}\": {\n      \"get\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/CartItem\": {\n      \"post\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/CartItem/{id}\": {\n      \"put\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/place-order\": {\n      \"post\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders\": {\n      \"get\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders/{orderId}/accept\": {\n      \"patch\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders/{orderId}/reject\": {\n      \"patch\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders/{orderId}/ship\": {\n      \"patch\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/User\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/User/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"AddToCartItemRequest\": {\n        \"required\": [\n          \"bookId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"quantity\": {\n            \"maximum\": 1000000,\n            \"minimum\": 1,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Book\": {\n        \"required\": [\n          \"author\",\n          \"isAvailable\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"maxLength\": 50,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Book\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookStoreRequest\": {\n        \"required\": [\n          \"author\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookUpdateRequest\": {\n        \"required\": [\n          \"author\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItem\": {\n        \"required\": [\n          \"bookId\",\n          \"quantity\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"book\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemListResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CartItem\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/CartItem\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemUpdateRequest\": {\n        \"required\": [\n          \"quantity\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"quantity\": {\n            \"maximum\": 1000000,\n            \"minimum\": 1,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginRequest\": {\n        \"required\": [\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginResponseResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/LoginResponse\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Order\": {\n        \"required\": [\n          \"totalAmount\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"totalAmount\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"discount\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"shippingAddress\": {\n            \"maxLength\": 100,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"isShipped\": {\n            \"type\": \"boolean\"\n          },\n          \"isApproved\": {\n            \"type\": \"boolean\"\n          },\n          \"isRejected\": {\n            \"type\": \"boolean\"\n          },\n          \"paymentMethod\": {\n            \"$ref\": \"#/components/schemas/PaymentMethod\"\n          },\n          \"orderItems\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OrderItem\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderItem\": {\n        \"required\": [\n          \"bookId\",\n          \"orderId\",\n          \"quantity\",\n          \"unitPrice\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"orderId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"unitPrice\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"book\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Order\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Order\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"PaymentMethod\": {\n        \"enum\": [\n          \"FIB\",\n          \"ZainCash\",\n          \"QI\",\n          \"MasterCard\",\n          \"VisaCard\",\n          \"WesternUnion\",\n          \"ApplyPay\",\n          \"Cash\"\n        ],\n        \"type\": \"string\"\n      },\n      \"PlaceOrderRequest\": {\n        \"required\": [\n          \"paymentMethod\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"shippingAddress\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"paymentMethod\": {\n            \"$ref\": \"#/components/schemas/PaymentMethod\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"RefreshTokenRequest\": {\n        \"required\": [\n          \"refreshToken\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"refreshToken\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"StringResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"User\": {\n        \"required\": [\n          \"name\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 3,\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserDto\": {\n        \"required\": [\n          \"name\",\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 3,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"maxLength\": 100,\n            \"minLength\": 6,\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/User\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/User\"\n          }\n        },\n        \"additionalProperties\": false\n      }\n    },\n    \"securitySchemes\": {\n      \"Bearer\": {\n        \"type\": \"http\",\n        \"description\": \"Authorization header using the Bearer scheme. Example: 'Bearer {token}'\",\n        \"scheme\": \"bearer\"\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"Bearer\": [ ]\n    }\n  ]\n}"}
2025-06-02 04:15:50.913 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/swagger/index.html","StatusCode":200,"Duration":1,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Swagger UI</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./index.css\">\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" />\n    <link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n       \n</head>\n\n<body>\n    <div id=\"swagger-ui\"></div>\n\n    <script src=\"./swagger-ui-bundle.js\" charset=\"utf-8\"></script>\n    <script src=\"./swagger-ui-standalone-preset.js\" charset=\"utf-8\"></script>\n    <script src=\"index.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n"}
2025-06-02 04:15:50.999 +03:00 [INF] HTTP Request/Response Info: {"Method":"GET","Path":"/swagger/v1/swagger.json","StatusCode":200,"Duration":14,"User":"UserId: , UserName: ","RequestBody":"","ResponseBody":"{\n  \"openapi\": \"3.0.4\",\n  \"info\": {\n    \"title\": \"Your API\",\n    \"version\": \"v1\"\n  },\n  \"paths\": {\n    \"/Auth/login\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponseResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Auth/register\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Auth/refresh-token\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Book/search-books\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Book/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookUpdateRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Book\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/Book\": {\n      \"post\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookStoreRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/checkout/{userId}\": {\n      \"get\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemListResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/CartItem\": {\n      \"post\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddToCartItemRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItemResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/CartItem/{id}\": {\n      \"put\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CartItemUpdateRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CartItem\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"CartItem\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/place-order\": {\n      \"post\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlaceOrderRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders\": {\n      \"get\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders/{orderId}/accept\": {\n      \"patch\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders/{orderId}/reject\": {\n      \"patch\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/orders/{orderId}/ship\": {\n      \"patch\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/User\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Sorting field, e.g., 'id' or '-id', write [-fieldname] for ascending order\"\n            }\n          },\n          {\n            \"name\": \"Page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PerPage\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Include\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Filters\",\n            \"in\": \"query\",\n            \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n            \"style\": \"deepObject\",\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Dynamic filters passed as query parameters in key-value format.\\n\\nExamples:\\n- Equal: `filters[fieldName1]=value`\\n- Like: `filters[fieldName2]=*Az*` , its like '%Az%'\\n- In: `filters[fieldName3]=1,3`, it's fieldname3 in(1,3)\\n- Between: `filters[createdDate]=2024-01-01,2024-01-31`\\n\\nNote: In Swagger UI, provide the filters as a JSON object:\\n`{\\n  \\\"fieldname2\\\": \\\"*Az*\\\",\\n  \\\"fieldname2\\\": \\\"1,3\\\"\\n}`\",\n              \"default\": null\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPaginatedResult\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/User/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"AddToCartItemRequest\": {\n        \"required\": [\n          \"bookId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"quantity\": {\n            \"maximum\": 1000000,\n            \"minimum\": 1,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Book\": {\n        \"required\": [\n          \"author\",\n          \"isAvailable\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"maxLength\": 50,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Book\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookStoreRequest\": {\n        \"required\": [\n          \"author\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookUpdateRequest\": {\n        \"required\": [\n          \"author\",\n          \"price\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"genre\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"maximum\": 9999999999,\n            \"minimum\": 0,\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItem\": {\n        \"required\": [\n          \"bookId\",\n          \"quantity\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"book\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemListResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CartItem\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/CartItem\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CartItemUpdateRequest\": {\n        \"required\": [\n          \"quantity\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"quantity\": {\n            \"maximum\": 1000000,\n            \"minimum\": 1,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginRequest\": {\n        \"required\": [\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LoginResponseResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/LoginResponse\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Order\": {\n        \"required\": [\n          \"totalAmount\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"totalAmount\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"discount\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"shippingAddress\": {\n            \"maxLength\": 100,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"isShipped\": {\n            \"type\": \"boolean\"\n          },\n          \"isApproved\": {\n            \"type\": \"boolean\"\n          },\n          \"isRejected\": {\n            \"type\": \"boolean\"\n          },\n          \"paymentMethod\": {\n            \"$ref\": \"#/components/schemas/PaymentMethod\"\n          },\n          \"orderItems\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OrderItem\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderItem\": {\n        \"required\": [\n          \"bookId\",\n          \"orderId\",\n          \"quantity\",\n          \"unitPrice\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"orderId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bookId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"unitPrice\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"book\": {\n            \"$ref\": \"#/components/schemas/Book\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Order\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Order\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"PaymentMethod\": {\n        \"enum\": [\n          \"FIB\",\n          \"ZainCash\",\n          \"QI\",\n          \"MasterCard\",\n          \"VisaCard\",\n          \"WesternUnion\",\n          \"ApplyPay\",\n          \"Cash\"\n        ],\n        \"type\": \"string\"\n      },\n      \"PlaceOrderRequest\": {\n        \"required\": [\n          \"paymentMethod\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"shippingAddress\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"paymentMethod\": {\n            \"$ref\": \"#/components/schemas/PaymentMethod\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"RefreshTokenRequest\": {\n        \"required\": [\n          \"refreshToken\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"refreshToken\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"StringResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"User\": {\n        \"required\": [\n          \"name\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 3,\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserDto\": {\n        \"required\": [\n          \"name\",\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 3,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"maxLength\": 100,\n            \"minLength\": 6,\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserPaginatedResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/User\"\n            },\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/User\"\n          }\n        },\n        \"additionalProperties\": false\n      }\n    },\n    \"securitySchemes\": {\n      \"Bearer\": {\n        \"type\": \"http\",\n        \"description\": \"Authorization header using the Bearer scheme. Example: 'Bearer {token}'\",\n        \"scheme\": \"bearer\"\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"Bearer\": [ ]\n    }\n  ]\n}"}
2025-06-02 13:55:41.955 +03:00 [INF] Application is shutting down...
